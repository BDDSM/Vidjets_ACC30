// Возвращает настройки по умолчанию
//
// Параметры:
//  Параметры - Структура параметров со свойствами, соответствующими именам блоков,значеними, являются структуры с полями:
//    * Пометка - Булево - включен/выключен блок
//    * Порядок - Число - порядковый номер блока информационной панели, используется для сортировки таблицы блоков
//
&Вместо("НастройкаПоУмолчанию")
Функция ВидБух_НастройкаПоУмолчанию() Экспорт
	
	ИспользуетсяРазделениеДанных = ТехнологияСервисаИнтеграцияСБСП.ДоступноИспользованиеРазделенныхДанных()
		И ТехнологияСервисаИнтеграцияСБСП.РазделениеВключено();
	
	ВыбранныеБлоки = Новый Массив();
	Если ИспользуетсяРазделениеДанных Тогда
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаОстаткиДенежныхСредств());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПокупатели());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПоддержкаСервиса());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаЗадачи());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаНовости());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаМетодическаяПоддержка());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПродажи());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПоставщики());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаОтчетность());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПОЛЬЗ0());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПОЛЬЗ1());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПОЛЬЗ2());
	Иначе
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаОстаткиДенежныхСредств());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПокупатели());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПродажи());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаЗадачи());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаНовости());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаМетодическаяПоддержка());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПоставщики());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаОтчетность());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПОЛЬЗ0());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПОЛЬЗ1());
		ВыбранныеБлоки.Добавить(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПОЛЬЗ2());
	КонецЕсли;
	
	НастройкаБлоков = Новый Структура;
	
	Порядок = 0;
	Для Каждого ИмяБлока Из ВыбранныеБлоки Цикл
		ЗначенияНастроек = Новый Структура("Пометка, Порядок", Истина, Порядок);
		НастройкаБлоков.Вставить(ИмяБлока, ЗначенияНастроек);
		Порядок = Порядок + 1;
	КонецЦикла;
	
	Возврат НастройкаБлоков;
	
КонецФункции

&Перед("ПрименитьНастройки")
Процедура ВидБух_ПрименитьНастройки(КоллекцияБлоков)
	
	НастройкаБлоков = ХранилищеОбщихНастроек.Загрузить("ИнформационнаяПанель", "НастройкаБлоков");
	Если ТипЗнч(НастройкаБлоков) = Тип("Структура") Тогда
		Если НЕ НастройкаБлоков.Свойство(БлокиИнформационнойПанелиКлиентСервер.ИмяБлокаПОЛЬЗ0()) Тогда
			
			Настройки = НастройкаПоУмолчанию();
			ХранилищеОбщихНастроек.Сохранить(
			"ИнформационнаяПанель",
			"НастройкаБлоков",
			Настройки,
			НСтр("ru = 'Настройка состава и порядка блоков Информационной панели'"));			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&Вместо("КоличествоСтрок")
Функция ВидБух_КоличествоСтрок()
	Возврат 4;
КонецФункции
